from django.shortcuts import render, redirect
from django.http import HttpResponse
from .models import Device
from .forms import DeviceForm
import pandas as pd

# Начальный адрес Modbus для каждого типа
modbus_address = {
    "Аналоговый датчик": 1,
    "Кран с электрическим приводом": 40001,
    "Электромагнитный клапан": 40139,
    "Насос": 40119
}

def device_list(request):
    devices = Device.objects.all()
    form = DeviceForm()
    if request.method == 'POST':
        form = DeviceForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('device_list')
    return render(request, 'modbus/device_list.html', {'devices': devices, 'form': form})




def generate_report(request):
    devices = Device.objects.all()
    modbus_data = []
    row_number = 1  # Счетчик для столбца "№ п/п"

    for device in devices:
        modbus_start = modbus_address[device.param_type]

        if device.param_type == "Аналоговый датчик":
            modbus_data.extend([
                {"№ п/п": row_number, "Обозначение": device.tag, "Переменная": device.name, "Элемент": "Значение", "Ед.изм": "мА", "Тип данных": "Real", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start},
                {"№ п/п": row_number + 1, "Обозначение": "", "Переменная": "", "Элемент": "Значение в инж. величинах", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start + 2},
                {"№ п/п": row_number + 2, "Обозначение": "", "Переменная": "", "Элемент": "Граница при 4 мА", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 4},
                {"№ п/п": row_number + 3, "Обозначение": "", "Переменная": "", "Элемент": "Граница при 20 мА", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 6},
                {"№ п/п": row_number + 4, "Обозначение": "", "Переменная": "", "Элемент": "Уставка LL (нижняя аварийная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 8},
                {"№ п/п": row_number + 5, "Обозначение": "", "Переменная": "", "Элемент": "Уставка L (нижняя предупредительная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 10},
                {"№ п/п": row_number + 6, "Обозначение": "", "Переменная": "", "Элемент": "Уставка H (верхняя предупредительная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 12},
                {"№ п/п": row_number + 7, "Обозначение": "", "Переменная": "", "Элемент": "Уставка HH (верхняя аварийная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 14},
                {"№ п/п": row_number + 8, "Обозначение": "", "Переменная": "", "Элемент": "Значение имитации", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 16},
                {"№ п/п": row_number + 9, "Обозначение": "", "Переменная": "", "Элемент": "Мертвая зона (гистерезис)", "Ед.изм": "%", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 18},
                {"№ п/п": row_number + 10, "Обозначение": "", "Переменная": "", "Элемент": "Управление:\nБит 0 - Включить датчик\nБит 1 - Включить имитацию\nБит 2 - Включить уставку LL\nБит 3 - Включить уставку L\nБит 4 - Включить уставку H\nБит 5 - Включить уставку HH\nБит 6 - Разрешить маскирование\nБит 7 - Бит 15 - резерв", "Ед.изм": "", "Тип данных": "16-bit integer", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 20, "Примечание": "Биты управления..."},
                {"№ п/п": row_number + 11, "Обозначение": "", "Переменная": "", "Элемент": "Состояние", "Ед.изм": "", "Тип данных": "16-bit integer", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start + 21, "Примечание": "Биты состояния..."},
                {"№ п/п": row_number + 12, "Обозначение": "", "Переменная": "", "Элемент": "Состояние для отображения", "Ед.изм": "", "Тип данных": "16-bit integer", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start + 22}
            ])
            row_number += 13  # Увеличиваем номер строки на количество параметров для следующего устройства
        


        if device.param_type == "Кран с электрическим приводом":
            modbus_data.extend([
                {"№ п/п": row_number, "Обозначение": device.tag, "Переменная": device.name, "Элемент": "Значение", "Ед.изм": "мА", "Тип данных": "Real", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start},
                {"№ п/п": row_number + 1, "Обозначение": "", "Переменная": "", "Элемент": "Значение в инж. величинах", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start + 2},
                {"№ п/п": row_number + 2, "Обозначение": "", "Переменная": "", "Элемент": "Граница при 4 мА", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 4},
                {"№ п/п": row_number + 3, "Обозначение": "", "Переменная": "", "Элемент": "Граница при 20 мА", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 6},
                {"№ п/п": row_number + 4, "Обозначение": "", "Переменная": "", "Элемент": "Уставка LL (нижняя аварийная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 8},
                {"№ п/п": row_number + 5, "Обозначение": "", "Переменная": "", "Элемент": "Уставка L (нижняя предупредительная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 10},
                {"№ п/п": row_number + 6, "Обозначение": "", "Переменная": "", "Элемент": "Уставка H (верхняя предупредительная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 12},
                {"№ п/п": row_number + 7, "Обозначение": "", "Переменная": "", "Элемент": "Уставка HH (верхняя аварийная)", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 14},
                {"№ п/п": row_number + 8, "Обозначение": "", "Переменная": "", "Элемент": "Значение имитации", "Ед.изм": "°С", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 16},
                {"№ п/п": row_number + 9, "Обозначение": "", "Переменная": "", "Элемент": "Мертвая зона (гистерезис)", "Ед.изм": "%", "Тип данных": "Real", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 18},
                {"№ п/п": row_number + 10, "Обозначение": "", "Переменная": "", "Элемент": "Управление", "Ед.изм": "", "Тип данных": "16-bit integer", "Чтение/Запись": "чтение/запись", "Адрес Modbus": modbus_start + 20, "Примечание": "Биты управления..."},
                {"№ п/п": row_number + 11, "Обозначение": "", "Переменная": "", "Элемент": "Состояние", "Ед.изм": "", "Тип данных": "16-bit integer", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start + 21, "Примечание": "Биты состояния..."},
                {"№ п/п": row_number + 12, "Обозначение": "", "Переменная": "", "Элемент": "Состояние для отображения", "Ед.изм": "", "Тип данных": "16-bit integer", "Чтение/Запись": "чтение", "Адрес Modbus": modbus_start + 22}
            ])
    row_number += 13  # Увеличиваем номер строки на количество параметров для следующего устройства

    # Создание DataFrame и сохранение в Excel
    df = pd.DataFrame(modbus_data)
    response = HttpResponse(content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    response['Content-Disposition'] = 'attachment; filename="modbus_report.xlsx"'
    df.to_excel(response, index=False)
    return response
